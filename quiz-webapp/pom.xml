<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>cn.clubox</groupId>
    <artifactId>quiz</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  
  <artifactId>quiz-webapp</artifactId>
  <packaging>war</packaging>
  <name>quiz-webapp Maven Webapp</name>
  
  <organization>
		<name>Ahamojo</name>
		<url>http://www.ahamojo.com</url>
	</organization>
	<dependencies>
		<!-- Compile -->
		<dependency>
			<groupId>cn.clubox</groupId>
			<artifactId>quiz-impl</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<!--dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-jooq</artifactId> 
			</dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<!-- To build an executable war use one of the profiles below -->
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Provided -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>gensrc/main/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>tomcat</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>jetty</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-jetty</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>undertow</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-undertow</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>generate</id>
			<build>
				<plugins>
					<!--plugin> <artifactId>maven-compiler-plugin</artifactId> <executions> 
						<execution> <id>generate-jooq-utils</id> <phase>generate-sources</phase> 
						<goals> <goal>compile</goal> </goals> <inherited>false</inherited> <configuration> 
						<includes> <inclue>sample/jooq/util/**</inclue> </includes> </configuration> 
						</execution> </executions> </plugin> <plugin> <groupId>org.codehaus.mojo</groupId> 
						<artifactId>sql-maven-plugin</artifactId> <version>1.5</version> <executions> 
						<execution> <phase>generate-sources</phase> <goals> <goal>execute</goal> 
						</goals> </execution> </executions> <dependencies> <dependency> <groupId>com.h2database</groupId> 
						<artifactId>h2</artifactId> <version>${h2.version}</version> </dependency> 
						</dependencies> <configuration> <driver>org.h2.Driver</driver> <url>jdbc:h2:~/springbootjooq</url> 
						<srcFiles> <srcFile>${basedir}/src/main/resources/reset.sql</srcFile> <srcFile>${basedir}/src/main/resources/schema.sql</srcFile> 
						</srcFiles> </configuration> </plugin -->
					<plugin>
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>9.4-1201-jdbc41</version>
							</dependency>
						</dependencies>
						<configuration>
							<jdbc>
								<driver>org.postgresql.Driver</driver>
								<url>jdbc:postgresql://192.168.5.200:5432/lrsdb</url>
								<user>lrs</user>
								<password>123456</password>
							</jdbc>
							<generator>
								<name>org.jooq.util.DefaultGenerator</name>
								<database>
									<includes>lrs_.*</includes>
									<excludes />
									<inputSchema>public</inputSchema>
								</database>
								<!--strategy> <name>sample.jooq.util.TangleFreeGeneratorStrategy</name> 
									</strategy -->
								<target>
									<packageName>sample.jooq.domain</packageName>
									<directory>${basedir}/gensrc/main/java</directory>
									<!-- directory>src/main/java</directory -->
								</target>
								<generate>
									<records>false</records>
								</generate>
							</generator>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
 </project>
