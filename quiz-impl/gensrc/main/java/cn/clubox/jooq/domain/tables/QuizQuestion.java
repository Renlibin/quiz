/*
 * This file is generated by jOOQ.
*/
package cn.clubox.jooq.domain.tables;


import cn.clubox.jooq.domain.Keys;
import cn.clubox.jooq.domain.Quiz;
import cn.clubox.jooq.domain.tables.records.QuizQuestionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuizQuestion extends TableImpl<QuizQuestionRecord> {

    private static final long serialVersionUID = -1196669155;

    /**
     * The reference instance of <code>quiz.quiz_question</code>
     */
    public static final QuizQuestion QUIZ_QUESTION = new QuizQuestion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuizQuestionRecord> getRecordType() {
        return QuizQuestionRecord.class;
    }

    /**
     * The column <code>quiz.quiz_question.id</code>.
     */
    public final TableField<QuizQuestionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_question.quiz_id</code>.
     */
    public final TableField<QuizQuestionRecord, Integer> QUIZ_ID = createField("quiz_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_question.title</code>.
     */
    public final TableField<QuizQuestionRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_question.stored</code>.
     */
    public final TableField<QuizQuestionRecord, Timestamp> STORED = createField("stored", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_question.updated</code>.
     */
    public final TableField<QuizQuestionRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_question.sequence_number</code>.
     */
    public final TableField<QuizQuestionRecord, Short> SEQUENCE_NUMBER = createField("sequence_number", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>quiz.quiz_question</code> table reference
     */
    public QuizQuestion() {
        this("quiz_question", null);
    }

    /**
     * Create an aliased <code>quiz.quiz_question</code> table reference
     */
    public QuizQuestion(String alias) {
        this(alias, QUIZ_QUESTION);
    }

    private QuizQuestion(String alias, Table<QuizQuestionRecord> aliased) {
        this(alias, aliased, null);
    }

    private QuizQuestion(String alias, Table<QuizQuestionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Quiz.QUIZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QuizQuestionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_QUIZ_QUESTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QuizQuestionRecord> getPrimaryKey() {
        return Keys.KEY_QUIZ_QUESTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QuizQuestionRecord>> getKeys() {
        return Arrays.<UniqueKey<QuizQuestionRecord>>asList(Keys.KEY_QUIZ_QUESTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QuizQuestionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QuizQuestionRecord, ?>>asList(Keys.FK_QUIZ_QUESTION_QUIZ_QUIZ_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizQuestion as(String alias) {
        return new QuizQuestion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QuizQuestion rename(String name) {
        return new QuizQuestion(name, null);
    }
}
