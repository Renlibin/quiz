/*
 * This file is generated by jOOQ.
*/
package cn.clubox.jooq.domain.tables;


import cn.clubox.jooq.domain.Keys;
import cn.clubox.jooq.domain.Quiz;
import cn.clubox.jooq.domain.tables.records.QuizEngagementRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuizEngagement extends TableImpl<QuizEngagementRecord> {

    private static final long serialVersionUID = -55689570;

    /**
     * The reference instance of <code>quiz.quiz_engagement</code>
     */
    public static final QuizEngagement QUIZ_ENGAGEMENT = new QuizEngagement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuizEngagementRecord> getRecordType() {
        return QuizEngagementRecord.class;
    }

    /**
     * The column <code>quiz.quiz_engagement.id</code>.
     */
    public final TableField<QuizEngagementRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_engagement.quiz_id</code>.
     */
    public final TableField<QuizEngagementRecord, Integer> QUIZ_ID = createField("quiz_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_engagement.user_id</code>.
     */
    public final TableField<QuizEngagementRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_engagement.duration</code>.
     */
    public final TableField<QuizEngagementRecord, String> DURATION = createField("duration", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_engagement.stored</code>.
     */
    public final TableField<QuizEngagementRecord, Timestamp> STORED = createField("stored", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>quiz.quiz_engagement</code> table reference
     */
    public QuizEngagement() {
        this("quiz_engagement", null);
    }

    /**
     * Create an aliased <code>quiz.quiz_engagement</code> table reference
     */
    public QuizEngagement(String alias) {
        this(alias, QUIZ_ENGAGEMENT);
    }

    private QuizEngagement(String alias, Table<QuizEngagementRecord> aliased) {
        this(alias, aliased, null);
    }

    private QuizEngagement(String alias, Table<QuizEngagementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Quiz.QUIZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QuizEngagementRecord, Integer> getIdentity() {
        return Keys.IDENTITY_QUIZ_ENGAGEMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QuizEngagementRecord> getPrimaryKey() {
        return Keys.KEY_QUIZ_ENGAGEMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QuizEngagementRecord>> getKeys() {
        return Arrays.<UniqueKey<QuizEngagementRecord>>asList(Keys.KEY_QUIZ_ENGAGEMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QuizEngagementRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QuizEngagementRecord, ?>>asList(Keys.FK_QUIZ_ENGAGEMENT_QUIZ_QUIZ_ID, Keys.FK_QUIZ_ENGAGEMENT_USER_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizEngagement as(String alias) {
        return new QuizEngagement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QuizEngagement rename(String name) {
        return new QuizEngagement(name, null);
    }
}
