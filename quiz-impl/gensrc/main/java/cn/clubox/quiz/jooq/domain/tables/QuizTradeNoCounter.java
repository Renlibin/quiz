/*
 * This file is generated by jOOQ.
*/
package cn.clubox.quiz.jooq.domain.tables;


import cn.clubox.quiz.jooq.domain.Keys;
import cn.clubox.quiz.jooq.domain.Quiz;
import cn.clubox.quiz.jooq.domain.tables.records.QuizTradeNoCounterRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuizTradeNoCounter extends TableImpl<QuizTradeNoCounterRecord> {

    private static final long serialVersionUID = -450496157;

    /**
     * The reference instance of <code>quiz.quiz_trade_no_counter</code>
     */
    public static final QuizTradeNoCounter QUIZ_TRADE_NO_COUNTER = new QuizTradeNoCounter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuizTradeNoCounterRecord> getRecordType() {
        return QuizTradeNoCounterRecord.class;
    }

    /**
     * The column <code>quiz.quiz_trade_no_counter.id</code>.
     */
    public final TableField<QuizTradeNoCounterRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_trade_no_counter.counter</code>.
     */
    public final TableField<QuizTradeNoCounterRecord, Integer> COUNTER = createField("counter", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>quiz.quiz_trade_no_counter</code> table reference
     */
    public QuizTradeNoCounter() {
        this("quiz_trade_no_counter", null);
    }

    /**
     * Create an aliased <code>quiz.quiz_trade_no_counter</code> table reference
     */
    public QuizTradeNoCounter(String alias) {
        this(alias, QUIZ_TRADE_NO_COUNTER);
    }

    private QuizTradeNoCounter(String alias, Table<QuizTradeNoCounterRecord> aliased) {
        this(alias, aliased, null);
    }

    private QuizTradeNoCounter(String alias, Table<QuizTradeNoCounterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Quiz.QUIZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QuizTradeNoCounterRecord> getPrimaryKey() {
        return Keys.KEY_QUIZ_TRADE_NO_COUNTER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QuizTradeNoCounterRecord>> getKeys() {
        return Arrays.<UniqueKey<QuizTradeNoCounterRecord>>asList(Keys.KEY_QUIZ_TRADE_NO_COUNTER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizTradeNoCounter as(String alias) {
        return new QuizTradeNoCounter(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QuizTradeNoCounter rename(String name) {
        return new QuizTradeNoCounter(name, null);
    }
}
