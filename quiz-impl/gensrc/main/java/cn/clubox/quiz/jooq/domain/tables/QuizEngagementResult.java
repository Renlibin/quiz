/*
 * This file is generated by jOOQ.
*/
package cn.clubox.quiz.jooq.domain.tables;


import cn.clubox.quiz.jooq.domain.Keys;
import cn.clubox.quiz.jooq.domain.Quiz;
import cn.clubox.quiz.jooq.domain.tables.records.QuizEngagementResultRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuizEngagementResult extends TableImpl<QuizEngagementResultRecord> {

    private static final long serialVersionUID = 1506487373;

    /**
     * The reference instance of <code>quiz.quiz_engagement_result</code>
     */
    public static final QuizEngagementResult QUIZ_ENGAGEMENT_RESULT = new QuizEngagementResult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuizEngagementResultRecord> getRecordType() {
        return QuizEngagementResultRecord.class;
    }

    /**
     * The column <code>quiz.quiz_engagement_result.id</code>.
     */
    public final TableField<QuizEngagementResultRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_engagement_result.quiz_engagement_id</code>.
     */
    public final TableField<QuizEngagementResultRecord, Integer> QUIZ_ENGAGEMENT_ID = createField("quiz_engagement_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_engagement_result.score</code>.
     */
    public final TableField<QuizEngagementResultRecord, Short> SCORE = createField("score", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_engagement_result.result_option</code>.
     */
    public final TableField<QuizEngagementResultRecord, String> RESULT_OPTION = createField("result_option", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>quiz.quiz_engagement_result.stored</code>.
     */
    public final TableField<QuizEngagementResultRecord, Timestamp> STORED = createField("stored", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>quiz.quiz_engagement_result.question_id</code>.
     */
    public final TableField<QuizEngagementResultRecord, Short> QUESTION_ID = createField("question_id", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>quiz.quiz_engagement_result</code> table reference
     */
    public QuizEngagementResult() {
        this("quiz_engagement_result", null);
    }

    /**
     * Create an aliased <code>quiz.quiz_engagement_result</code> table reference
     */
    public QuizEngagementResult(String alias) {
        this(alias, QUIZ_ENGAGEMENT_RESULT);
    }

    private QuizEngagementResult(String alias, Table<QuizEngagementResultRecord> aliased) {
        this(alias, aliased, null);
    }

    private QuizEngagementResult(String alias, Table<QuizEngagementResultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Quiz.QUIZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QuizEngagementResultRecord, Integer> getIdentity() {
        return Keys.IDENTITY_QUIZ_ENGAGEMENT_RESULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QuizEngagementResultRecord> getPrimaryKey() {
        return Keys.KEY_QUIZ_ENGAGEMENT_RESULT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QuizEngagementResultRecord>> getKeys() {
        return Arrays.<UniqueKey<QuizEngagementResultRecord>>asList(Keys.KEY_QUIZ_ENGAGEMENT_RESULT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QuizEngagementResultRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QuizEngagementResultRecord, ?>>asList(Keys.FK_QUIZ_ENGAGEMENT_RESULT_QUIZ_ENGAGEMENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizEngagementResult as(String alias) {
        return new QuizEngagementResult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QuizEngagementResult rename(String name) {
        return new QuizEngagementResult(name, null);
    }
}
