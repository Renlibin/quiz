/*
 * This file is generated by jOOQ.
*/
package cn.clubox.quiz.jooq.domain.tables.records;


import cn.clubox.quiz.jooq.domain.tables.QuizTradeNoCounter;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuizTradeNoCounterRecord extends UpdatableRecordImpl<QuizTradeNoCounterRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 2145822584;

    /**
     * Setter for <code>quiz.quiz_trade_no_counter.id</code>.
     */
    public QuizTradeNoCounterRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>quiz.quiz_trade_no_counter.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>quiz.quiz_trade_no_counter.counter</code>.
     */
    public QuizTradeNoCounterRecord setCounter(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>quiz.quiz_trade_no_counter.counter</code>.
     */
    public Integer getCounter() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return QuizTradeNoCounter.QUIZ_TRADE_NO_COUNTER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return QuizTradeNoCounter.QUIZ_TRADE_NO_COUNTER.COUNTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCounter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizTradeNoCounterRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizTradeNoCounterRecord value2(Integer value) {
        setCounter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuizTradeNoCounterRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuizTradeNoCounterRecord
     */
    public QuizTradeNoCounterRecord() {
        super(QuizTradeNoCounter.QUIZ_TRADE_NO_COUNTER);
    }

    /**
     * Create a detached, initialised QuizTradeNoCounterRecord
     */
    public QuizTradeNoCounterRecord(Integer id, Integer counter) {
        super(QuizTradeNoCounter.QUIZ_TRADE_NO_COUNTER);

        set(0, id);
        set(1, counter);
    }
}
